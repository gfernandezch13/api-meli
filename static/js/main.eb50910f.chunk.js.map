{"version":3,"sources":["components/CardComponent.jsx","components/InfoBarComponent.jsx","containers/ProductsContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardComponent","product","addProductToCart","className","src","thumbnail","alt","title","price","onClick","id","InfoBarComponent","shoppingCart","handleKeyPress","type","onKeyPress","placeholder","length","ProductsContainer","useState","searchInput","setSearchInput","products","setProducts","setShoppingCart","useEffect","getProducts","searchParam","a","fetch","response","json","responseJson","results","e","charCode","target","value","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAoBeA,EApBO,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBAChC,OACE,sBAAKC,UAAU,aAAf,UACE,qBAAKC,IAAKH,EAAQI,UAAWF,UAAU,eAAeG,IAAI,QAC1D,sBAAKH,UAAU,YAAf,UACE,qBAAIA,UAAU,aAAd,UACGF,EAAQM,MADX,OACsBN,EAAQO,SAE9B,mBAAGL,UAAU,YAAb,4GAIA,wBAAQA,UAAU,kBAAkBM,QAAS,kBAAMP,EAAiBD,EAAQS,KAA5E,gCCDOC,EAXU,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eACxC,OACE,sBAAKV,UAAU,UAAf,UACE,8BACE,uBAAOW,KAAK,OAAOC,WAAYF,EAAgBG,YAAY,6BAF/D,kCAIkCJ,EAAaK,WC8BpCC,EAhCW,WACxB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOP,EAAP,KAAqBY,EAArB,KAEAC,qBAAU,WACR,IAAMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACKC,MAAM,mDAAD,OACyBF,IAFnC,cACZG,EADY,gBAISA,EAASC,OAJlB,OAIZC,EAJY,OAKlBT,EAAYS,EAAaC,SALP,2CAAH,sDAQjBP,EAAYN,KACX,CAACA,IAEJ,IAAMlB,EAAmB,SAACD,GAAD,OAAauB,EAAgB,GAAD,mBAAKZ,GAAL,CAAmBX,MAGxE,OACE,sBAAKE,UAAU,YAAf,UACE,cAAC,EAAD,CAAkBS,aAAcA,EAAcC,eAJ3B,SAACqB,GAAD,OAAsB,KAAfA,EAAEC,UAAmBd,EAAea,EAAEE,OAAOC,UAKvE,qBAAKlC,UAAU,gBAAf,SACGmB,EAASgB,KAAI,SAACrC,GAAD,OACZ,cAAC,EAAD,CAAgCA,QAASA,EAASC,iBAAkBA,GAAhDD,EAAQS,aClBvB6B,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb50910f.chunk.js","sourcesContent":["const CardComponent = ({ product, addProductToCart }) => {\r\n  return (\r\n    <div className=\"card col-4\">\r\n      <img src={product.thumbnail} className=\"card-img-top\" alt=\"...\" />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">\r\n          {product.title} - ${product.price}\r\n        </h5>\r\n        <p className=\"card-text\">\r\n          Some quick example text to build on the card title and make up the bulk of the card's\r\n          content.\r\n        </p>\r\n        <button className=\"btn btn-primary\" onClick={() => addProductToCart(product.id)}>\r\n          Add to cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n","const InfoBarComponent = ({ shoppingCart, handleKeyPress }) => {\r\n  return (\r\n    <div className=\"bg-info\">\r\n      <div>\r\n        <input type=\"text\" onKeyPress={handleKeyPress} placeholder=\"Search by product name\" />\r\n      </div>\r\n      Quantity of selected products: {shoppingCart.length}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBarComponent;\r\n","import { useEffect, useState } from 'react';\r\nimport CardComponent from '../components/CardComponent';\r\nimport InfoBarComponent from '../components/InfoBarComponent';\r\n\r\nconst ProductsContainer = () => {\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n  const [shoppingCart, setShoppingCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getProducts = async (searchParam) => {\r\n      const response = await fetch(\r\n        `https://api.mercadolibre.com/sites/MLA/search?q=${searchParam}`\r\n      );\r\n      const responseJson = await response.json();\r\n      setProducts(responseJson.results);\r\n    };\r\n\r\n    getProducts(searchInput);\r\n  }, [searchInput]);\r\n\r\n  const addProductToCart = (product) => setShoppingCart([...shoppingCart, product]);\r\n  const handleKeyPress = (e) => e.charCode === 13 && setSearchInput(e.target.value);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <InfoBarComponent shoppingCart={shoppingCart} handleKeyPress={handleKeyPress} />\r\n      <div className=\"row px-2 py-2\">\r\n        {products.map((product) => (\r\n          <CardComponent key={product.id} product={product} addProductToCart={addProductToCart} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsContainer;\r\n","import './App.css';\nimport ProductsContainer from './containers/ProductsContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ProductsContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}